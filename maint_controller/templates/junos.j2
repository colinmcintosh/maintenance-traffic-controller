{% if DENYALL %}

replace protocols bgp group {{peer_group_name}} import DENY-ALL
replace protocols bgp group {{peer_group_name}} export DENY-ALL

set policy-options policy-statement DENY-ALL then reject

{% endif %}

{% if DENYALL_disengage %}

replace protocols bgp group {{peer_group_name}} import {{IN_PEER}}
replace protocols bgp group {{peer_group_name}} export {{OUT_PEER}}

{% endif %}

{% if TRFENG %}

{# ALTERNATIVELY if you do not want to do a DENY-ALL in the case that you only have two peers and are worried about 
if the other peer starts to have issues/goes down as well, 
then you can instead just do traffic engineering to prefer the other peer(s). #}

set policy-options policy-statement {{IN_PEER}} term LOCAL_PREF_ADJ then local-preference 5
set policy-options policy-statement {{IN_PEER}} term LOCAL_PREF_ADJ then accept
set policy-options policy-statement {{IN_PEER}} term LOCAL_PREF_ADJ then next policy
set policy-options policy-statement {{OUT_PEER}} term AS_PATH_PREPEND_3 then as-path-prepend "{{asn}} {{asn}} {{asn}}"
set policy-options policy-statement {{OUT_PEER}} term AS_PATH_PREPEND_3 then accept
set policy-options policy-statement {{OUT_PEER}} term AS_PATH_PREPEND_3 then next policy

{% endif %}

{% if TRFENG_disengage %}

delete policy-options policy-statement {{IN_PEER}} term LOCAL_PREF_ADJ
delete policy-options policy-statement {{OUT_PEER}} term AS_PATH_PREPEND_3


{% endif %}